---

- name: Set Opsman env
  ansible.builtin.set_fact:
    opsman_env: |
      {{ lookup('template', 'env.yml') | from_yaml }}

- name: Check Harbor cert hostname
  args:
    executable: /usr/bin/bash
  ansible.builtin.shell: 
    cmd: |-
      set -eo pipefail

      unset OM_PASSWORD OM_USERNAME OM_SKIP_SSL_VALIDATION OM_TARGET
      env=$(cat << EOF
      {{ opsman_env | to_nice_yaml }}
      EOF
      )

      om --env <(echo "$env") staged-config -p harbor-container-registry --include-credentials  | \
      om interpolate --path=/product-properties/.properties.server_cert_key/value/cert_pem | \
      openssl x509 -noout -text | grep DNS: | xargs
  register: result_harbor_cert_sans
  ignore_errors: true
  changed_when: false

- ansible.builtin.set_fact:
    harbor_cert_replace: |-
      {{ result_harbor_cert_sans.rc != 0 or 
      ( tas_apps_domain not in result_harbor_cert_sans.stdout and 
      tas_sys_domain not in result_harbor_cert_sans.stdout ) }}

- name: Generate gorouter certificate
  args:
    executable: /usr/bin/bash
  ansible.builtin.shell: 
    cmd: |-
      set -eo pipefail

      unset OM_PASSWORD OM_USERNAME OM_SKIP_SSL_VALIDATION OM_TARGET
      env=$(cat << EOF
      {{ opsman_env | to_nice_yaml }}
      EOF
      )

      om --env <(echo "$env") generate-certificate -d {{ harbor_fdqn }},{{ harbor_ip }}
  register: result_harbor_cert_pair
  when: harbor_cert_replace

- ansible.builtin.set_fact:
    harbor_cert_pair: "{{ result_harbor_cert_pair.stdout | from_json }}"
  when: harbor_cert_replace

- name: Setting Harbor Tile vars
  ansible.builtin.set_fact:
    harbor_vars:
      - slug: harbor-container-registry
        file_path: "{{ harbor_tile }}"
        product_config: "{{ lookup('template', 'harbor.yml') | from_yaml }}"
        apply_changes: false

- name: Dropping certificates if already set
  ansible.builtin.set_fact:
    harbor_vars: |
      {% set a = harbor_vars[0]['product_config']['product-properties'].pop('.properties.server_cert_key') %}
      {% set a = harbor_vars[0]['product_config']['product-properties'].pop('.properties.server_cert_ca') %}
      {{ harbor_vars }}
  when: not harbor_cert_replace

- name: Deploy Harbor
  ansible.builtin.include_role:
    name: tanzu/opsman/upload-stage-configure-tile
  with_items: "{{ harbor_vars }}"
