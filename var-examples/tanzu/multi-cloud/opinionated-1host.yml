---
# SOFTWARE_DIR must contain all required software
vc_iso: "{{ lookup('env', 'SOFTWARE_DIR') }}/VMware-VCSA-all-8.0.1-22088981.iso"
esxi_ova: "{{ lookup('env', 'SOFTWARE_DIR') }}/Nested_ESXi8.0u1a_Appliance_Template_v1.ova"
nsx_alb_controller_ova: "{{ lookup('env', 'SOFTWARE_DIR') }}/controller-22.1.4-9196.ova"
tkgm_os_kubernetes_ova: "{{ lookup('env', 'SOFTWARE_DIR') }}/ubuntu-2004-kube-v1.27.5+vmware.1-tkg.1-0eb96d2f9f4f705ac87c40633d4b69st.ova"

environment_tag: "tanzu-multi-cloud-avi"  # Used to prepend object names in hosting vCenter
dns_server: "192.168.0.1"
dns_domain: "home.local"
ntp_server_ip: "192.168.0.1"
disk_mode: thin  # How all disks should be deployed
# This will be set everywhere!
nested_host_password: "{{ opinionated.master_password }}"

hosting_vcenter:  # This is the vCenter which will be the target for nested vCenters and ESXi hosts
  ip: "192.168.1.250"
  username: "{{ lookup('env', 'PARENT_VCENTER_USERNAME') }}"
  password: "{{ lookup('env', 'PARENT_VCENTER_PASSWORD') }}"
  datacenter: "Home"  # Target for all VM deployment

# This section is only referenced by other variables in this file
opinionated:
  master_password: "VMware1!"
  number_of_hosts: 1  # number of ESXi VMs to deploy
  nested_hosts:
    cpu_cores: 24  # CPU count per nested host
    ram_in_gb: 192  # memory per nested host
    local_disks:  # (optional) this section can be removed to not modify local disks
      - size_gb: 500
        datastore_prefix: "datastore"  # omit this to not have a datastore created
  hosting_cluster: Physical
  hosting_datastore: NVME
  hosting_network:
    base:
      port_group: Nest
      cidr: "192.168.0.0/22"
      gateway: "192.168.0.1"
      # A TKGM deployment requires 5 contiguous IPs. vCenter, Avi Controller, Esxi, 2 x Avi Service Engines.
      starting_addr: "192.168.1.40"
    # If using your own network you must provide at least a /24.
    # In the example below the same subnet is used for both the workload nodes and the VIPs
    # Avi will use the IP range defined vip_ip_range for VIPs
    # TKG needs DHCP to be configured for the first half of the subnet
    # By default the second IP address is the API VIP.
    # Recommend reserving the first 10 IPs for use as API VIPs.
    workload:
      port_group: trunk
      vlan_id: 10  # Optional. If unset VLAN 0 will be used
      cidr: "172.19.10.0/24"
      gateway: "172.19.10.1"
      vip_ip_range: "172.19.10.128-172.19.10.254"
  # This public key will be assigned to the created VMs, so you must have the private key to be able to use SSH
  ssh_public_key: ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQC/qMIbcfUkClzrBi7QjUmtdfpjDlTSXsPcJsmdmezbem2SboQPujpFUGmzFXi5PqhPa3QOxvMn8oJpozlJYydDspFAAqX+0u8n0FrwMMn0ckwUtF4zxz/AnI8tUltjeN67M7mG+3W8ooRFeaY6nrjxEIXbkMOzSbeTaFcB9cDzRXcMmFiuoeDhUonEYbClrsPzLdzscw7Vz6BLMHwo9SBOqlaL25aG/DtZPB7jobQRh48q3RW+Hb29nH18biJNLiBDsRu1SJIzw7Dl+rNSX9Va56vX0cz5CDiTg9A69WgySDx7oZFZM3W6jyHCN0fQbw/OxE/2MemhfQbdJqgffA7zE0qx+/DVIoT5bBP7FPpQSxkMjC+AEAH4PPsDIP0KJH9do6+T/g/Mf6725IOaPSJyV0bAkz1T57T1ty19KdhvPVfjrMnCap+pLvD6Qd/lxzY9uFF4oOwWmo4xQ6hQXZ9oJUhrRsG2A5LF7XGXwOb8mHSG4InfUfjaov4gjLl5tN0=

#####################################################################
### No need to edit below this line for an opinionated deployment ###
#####################################################################

nested_vcenter:  # the vCenter appliance that will be deployed
  ip: "{{ opinionated.hosting_network.base.starting_addr }}"  # vCenter ip address
  mask: "{{ opinionated.hosting_network.base.cidr.split('/')[1] }}"
  gw: "{{ opinionated.hosting_network.base.gateway }}"
  host_name: "{{ opinionated.hosting_network.base.starting_addr }}"  # FQDN if there is working DNS server, otherwise put the ip as a name
  username: "administrator@vsphere.local"
  password: "{{ opinionated.master_password }}"
  datacenter: "Lab"  # DC to create after deployment
  # Below are properties of parent cluster
  hosting_network: "{{ opinionated.hosting_network.base.port_group }}"  # Parent port group where the vCenter VM will be deployed
  hosting_cluster: "{{ opinionated.hosting_cluster }}"  # Parent cluster where the vCenter VM will be deployed
  hosting_datastore: "{{ opinionated.hosting_datastore }}"  # Parent datastore where the vCenter VM will be deployed

nested_clusters:  # You can add clusters in this section by duplicating the existing cluster
  compute:  # This will be the name of the cluster in the nested  vCenter. Below are the minimum settings.
    enable_drs: true
    # HA can only be enabled if there is are datastores accessible by all hosts.
    enable_ha: true
    ha_host_monitoring: disabled
    # Below are properties of the hosting cluster
    hosting_cluster: "{{ opinionated.hosting_cluster }}"  # The nested ESXi VMs will be deployed here
    hosting_datastore: "{{ opinionated.hosting_datastore }}"  # Datastore target for nested ESXi VMs
    # Settings below are assigned to each host in the cluster
    vswitch0_vm_port_group_name: vm-network
    vswitch0_vm_port_group_vlan: "0"
    cpu_cores: "{{ opinionated.nested_hosts.cpu_cores }}"  # CPU count
    ram_in_gb: "{{ opinionated.nested_hosts.ram_in_gb }}"  # memory
    # In order list of disks to assign to the nested host. All will be marked as SSD.
    # Datastore names will be automatically be pre-pended with the hostname. E.g esx1
    # If the datastore_prefix property is removed the disk will not be set as a datastore
    # To leave the default OVA disks in place, delete this section.
    nested_hosts_disks: "{{ opinionated.nested_hosts.local_disks | default(omit) }}"
    # Added in vmnic order, these port groups must exist on the physical host
    # Must specify at least 2 port groups, up to a maximum of 10
    vmnic_physical_portgroup_assignment:
      - name: "{{ opinionated.hosting_network.base.port_group }}"
      - name: "{{ opinionated.hosting_network.workload.port_group }}"
    resource_pools:  # List of resource pools, remove if not needed
      - tkc

# Below specifies how many IPs are reserved for other functions
opinionated_host_ip_ofset: 4
# You can add nested ESXi hosts below
nested_hosts: >-
  [
    {% for host_number in range(opinionated.number_of_hosts) %}
    {
      "name": "esx{{ host_number + 1 }}",
      "ip": "{{ opinionated.hosting_network.base.starting_addr | ansible.utils.ipmath(opinionated_host_ip_ofset + host_number) }}",
      "mask": "{{ opinionated.hosting_network.base.cidr | ansible.utils.ipaddr('netmask') }}",
      "gw": "{{ opinionated.hosting_network.base.gateway }}",
      "nested_cluster": "compute"
    },
    {% endfor %}
  ]

distributed_switches:  # To not create any distributed switches, comment this section.
  - vds_name: vds
    mtu: 1500
    vds_version: 7.0.0
    clusters:  # distributed switch will be attached to all hosts in the clusters defined
      - compute
    uplink_quantity: 1
    vmnics:
      - vmnic1
    distributed_port_groups:
      - port_group_name: workload-pg
        vlan_id: "{{ opinionated.hosting_network.workload.vlan_id | default(0) }}"

vm_templates:
  - local_path: "{{ tkgm_os_kubernetes_ova }}"
    vcenter_server: "{{ nested_vcenter.ip }}"
    vcenter_username: "{{ nested_vcenter.username }}"
    vcenter_password: "{{ nested_vcenter.password }}"
    vcenter_datacenter: "{{ nested_vcenter.datacenter }}"
    vcenter_datastore: datastore-esx1
    vcenter_network: workload-pg
    vsphere_clusters: "{{ nested_clusters.keys() | list }}"

tanzu_multi_cloud:
  generated_config_file_name: cluster-config.yml

  avi_cloud_name: "{{ nsx_alb.cloud_name | default('Default-Cloud') }}"
  avi_controller: "{{ nsx_alb.controller_ip }}"
  avi_data_network: "{{ nsx_alb.se_vip_port_group }}"
  avi_data_network_cidr: "{{ nsx_alb.se_vip_network_cidr }}"
  avi_password: "{{ nsx_alb.controller_password }}"
  avi_service_engine_group: "{{ nsx_alb.se_group_name | default('Default-Group') }}"
  avi_username: "{{ nsx_alb.controller_username }}"

  # used in TKGM cluster config yaml
  vsphere_control_plane_endpoint: "{{ opinionated.hosting_network.workload.cidr | ansible.utils.ipmath(2) }}"
  vsphere_datacenter_path: "/{{ nested_vcenter.datacenter }}"
  vsphere_datastore_path: "/{{ nested_vcenter.datacenter }}/datastore/datastore-esx1"
  vsphere_folder_path: "/{{ nested_vcenter.datacenter }}/vm"
  vsphere_network: workload-pg
  vsphere_password: "{{ nested_vcenter.password }}"
  vsphere_resource_pool_path: "/{{ nested_vcenter.datacenter }}/host/compute/Resources"
  vsphere_server: "{{ nested_vcenter.ip }}"
  vsphere_ssh_authorized_key: "{{ opinionated.ssh_public_key }}"
  vsphere_username: "{{ nested_vcenter.username }}"

nsx_alb:
  api_version: "22.1.4"
  controller_username: admin
  controller_password: "{{ opinionated.master_password }}"
  controller_ssh_public_key: "{{ opinionated.ssh_public_key }}"
  controller_default_password: "{{ lookup('env', 'AVI_DEFAULT_PASSWORD') }}"

  controller_ip: "{{ opinionated.hosting_network.base.starting_addr | ansible.utils.ipmath(1) }}"
  controller_netmask: "{{ opinionated.hosting_network.base.cidr.split('/')[1] }}"
  controller_gateway: "{{ opinionated.hosting_network.base.gateway }}"
  dns_server: "{{ dns_server }}"
  ntp_server: "{{ ntp_server_ip }}"

  controller_vcenter_ip: "{{ hosting_vcenter.ip }}"
  controller_vcenter_username: "{{ hosting_vcenter.username }}"
  controller_vcenter_password: "{{ hosting_vcenter.password }}"
  controller_vcenter_datacenter: "{{ hosting_vcenter.datacenter }}"
  controller_vcenter_cluster: "{{ opinionated.hosting_cluster }}"
  controller_vcenter_datastore: "{{ opinionated.hosting_datastore }}"
  controller_port_group: "{{ opinionated.hosting_network.base.port_group }}"

  cloud_vcenter_username: "{{ nested_vcenter.username }}"
  cloud_vcenter_password: "{{ nested_vcenter.password }}"
  cloud_vcenter_url: "{{ nested_vcenter.ip }}"
  cloud_vcenter_datacenter: "{{ nested_vcenter.datacenter }}"

  se_vcenter_cluster: compute
  # The management network will host he service engine management interface
  se_management_port_group: vm-network
  se_management_network_cidr: "{{ opinionated.hosting_network.base.cidr }}"
  se_management_network_range: >-
    {{ opinionated.hosting_network.base.starting_addr | ansible.utils.ipmath(2) }}-{{
    opinionated.hosting_network.base.starting_addr | ansible.utils.ipmath(3) }}
  se_management_network_gateway: "{{ opinionated.hosting_network.base.gateway }}"
  # The vip network will contain the virtual servers created by Avi
  se_vip_port_group: workload-pg
  se_vip_network_cidr: "{{ opinionated.hosting_network.workload.cidr }}"
  se_vip_network_range: "{{ opinionated.hosting_network.workload.vip_ip_range }}"
  se_vip_network_gateway: "{{ opinionated.hosting_network.workload.cidr | ansible.utils.ipmath(1) }}"

  # Setting dummy_service will trigger the SEs to be created by temporarily creating a service
  dummy_service:
    subnet_addr: "{{ opinionated.hosting_network.workload.cidr.split('/')[0] }}"
    subnet_mask: "{{ opinionated.hosting_network.workload.cidr.split('/')[1] }}"
    network_name: workload-pg
